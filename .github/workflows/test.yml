name: Test AnsibleSafe

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.17

    - name: Install Ansible Vault 
      run: pip3 install ansible-vault

    - name: Print ansible-vault version
      run: ansible-vault --version

    - name: Create vault password file
      run: |
        echo 'dummy_password' > ~/.vault_password
        chmod +x ansible_vault_setup.sh
        ./ansible_vault_setup.sh || exit $?

    - name: Build Go application
      run: go build -o ansiblesafe .

    - name: Create sample vault.yml
      run: |
        cat <<EOF > ~/vault.yml
        rhsm_username: rheluser
        rhsm_password: rhelpassword
        rhsm_org: orgid
        rhsm_activationkey: activationkey
        admin_user_password: password
        offline_token: offlinetoken
        automation_hub_offline_token: automationhubtoken
        openshift_pull_secret: pullsecret
        freeipa_server_admin_password: password
        EOF

    - name: Run encrypt tests
      run: |
        ./ansiblesafe -f ~/vault.yml -o 1

    - name: Run decrypt tests
      run: |
        ./ansiblesafe -f ~/vault.yml -o 2
    
    - name: Run skip encrypting/decrypting tests
      run: |
        ./ansiblesafe -f ~/vault.yml -o 5

    - name: Fetch latest tag and commit information
      run: |
        echo "Fetching latest tag and commit information..."
        LATEST_TAG=$(hack/version.sh)
        echo "Latest tag is: $LATEST_TAG"
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

    - name: Tag and push release on successful tests
      if: success()
      run: |
        echo "All tests passed. Tagging and pushing release..."
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        TAG=$LATEST_TAG
        git tag -a v${TAG} -m "Creating v${TAG} release"
        git push origin v${TAG}
